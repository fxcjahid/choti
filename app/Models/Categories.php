<?php

namespace App\Models;

use App\Models\Post;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Str;

class Categories extends Model
{
    use HasFactory;

    /**
     * The attributes that are mass assignable.
     *
     * @var array<int, string>
     */
    protected $fillable = [
        'user_id',
        'parent_id',
        'name',
        'slug',
        'description',
        'is_active',
    ];

    protected $casts = [
        'is_active' => 'boolean',
    ];

    /**
     * The accessors to append to the model's array form.
     *
     * @var array
     */

    /** protected $appends = ['posts']; */

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::creating(function ($category) {
            // Set auth user id
            $category->user_id = auth()->id();

            // Create Category URL
            if (empty($category->slug)) {
                $category->slug = Str::slug($category->name);
            }

            // Set Category Status
            if (empty($category->is_active)) {
                $category->is_active = true;
            }
        });
    }

    /**
     * Get publish category link for Sitemap
     */
    public static function sitemap()
    {
        return self::where('is_active', '=', true)
            ->get()
            ->map(function ($each) {
                return [
                    'url' => route('category', ['category' => $each->slug]),
                ];
            });
    }

    /**
     * Get post attached
     * Relation between table
     */
    public function post()
    {
        return $this->belongsToMany(Post::class, 'post_categories');
    }
}
